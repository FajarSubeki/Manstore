plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.devtools.ksp' version '1.9.0-1.0.13'
    id 'kotlin-parcelize'
}

android {
    namespace 'id.manstore'
    compileSdk 34

    defaultConfig {
        applicationId "id.manstore"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }
}

dependencies {

    // Kotlin extensions
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.room.ktx

    // Testing
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation libs.androidx.ui.test.manifest

    // Compose
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation libs.androidx.activity.compose
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation libs.androidx.activity.compose.v182
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation libs.androidx.lifecycle.viewmodel.compose
    implementation libs.androidx.navigation.compose
    implementation libs.androidx.runtime.livedata

    // Material
    implementation "androidx.compose.material:material:$compose_version"
//    implementation libs.androidx.material3

    // Hilt for DI
    implementation libs.hilt.android
    kapt libs.hilt.compiler
    implementation libs.androidx.hilt.navigation.compose
    kapt libs.androidx.hilt.compiler
    implementation libs.androidx.hilt.navigation.compose
    // Navigation made easier
//    implementation libs.core
//    ksp libs.ksp
    implementation 'io.github.raamcosta.compose-destinations:core:1.5.9-beta'
    ksp 'io.github.raamcosta.compose-destinations:ksp:1.5.9-beta'

    // Coil for loading images
    implementation(libs.coil.compose)

    // System UI Controller for Jetpack Compose
    implementation libs.accompanist.systemuicontroller

    // Timber for logging
    implementation libs.timber

    // Retrofit
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.okhttp
    implementation libs.logging.interceptor

    // Coroutines
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android

    // Preferences DataStore (SharedPreferences like APIs)
    implementation libs.androidx.datastore.preferences

    // Ratingbar
    implementation libs.compose.ratingbar

    // Room
    def room_version = "2.4.2"
    implementation libs.androidx.room.runtime
    ksp "androidx.room:room-compiler:$room_version"

}